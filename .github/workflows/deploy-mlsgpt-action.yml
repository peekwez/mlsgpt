name: Build and Deploy MLSGPT
concurrency: production
on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - hotfix/*
      - release/*
      - bugfix/*
      - fix/*
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  HOST: ${{ secrets.HOST }}
  USERNAME: ${{ secrets.USERNAME }}
  KEY: ${{ secrets.KEY }}
  PORT: ${{ secrets.PORT }}

jobs:
  build:
    name: Build
    environment: development
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/mlsgpt-amd64:latest
  # deploy:
  #   needs: build
  #   environment: development
  #   permissions:
  #     contents: read
  #     issues: write
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Deploy via SSH"
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ env.HOST }}
  #         username: ${{ env.USERNAME }}
  #         key: ${{ env.KEY }}
  #         port: ${{ env.PORT }}
  #         script: |
  #           docker-compose stop | true
  #           docker-compose rm -f | true
  #           docker pull ${{ env.DOCKERHUB_USERNAME }}/mlsgpt-amd64:latest
  #           docker-compose up -d
